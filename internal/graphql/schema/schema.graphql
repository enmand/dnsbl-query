"Relay Node interface support"
interface Node {
  id: ID!
}

"OrderDirection represents the directional ordering of a pagination cursor"
enum OrderDirection {
  ASC
  DESC
}

"Cursor represents cursor used for pagination"
scalar Cursor

"PageInfo represents pagination information for forwards and backwards pagination"
type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: Cursor
  endCursor: Cursor
}

"Time represents time-based fields"
scalar Time

"UUID represents UUID-based IDs"
scalar UUID

"Type of operation being preformed"
enum OperationType {
  IPDNSBL
}

"Status of the operation"
enum OperationStatus {
  IN_PROGRESS
  DONE
}

"An operation can be used to check the progress of a background task"
type Operation implements Node {
  "Unique ID of the enqueued operation"
  id: ID!

  "Type of the enqueued operation. Only IPDNSBL is supported"
  type: OperationType!

  "IP Address to be checked"
  ip_address: String!

  "Status of the Operation"
  status: OperationStatus!
}

"Query represents queries that the GraphQL service exposes"
type Query {
  node(id: ID!): Node

  getIPDetails(ip: String!): IP
}

"Mutations represent requests that will modify data"
type Mutation {
  enqueue(ip: [String!]): [Operation]
}

