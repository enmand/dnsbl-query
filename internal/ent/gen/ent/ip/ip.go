// Code generated by entc, DO NOT EDIT.

package ip

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the ip type in the database.
	Label = "ip"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldIPAddress holds the string denoting the ip_address field in the database.
	FieldIPAddress = "ip_address"

	// EdgeQueries holds the string denoting the queries edge name in mutations.
	EdgeQueries = "queries"

	// Table holds the table name of the ip in the database.
	Table = "ips"
	// QueriesTable is the table the holds the queries relation/edge.
	QueriesTable = "dnsbl_queries"
	// QueriesInverseTable is the table name for the DNSBLQuery entity.
	// It exists in this package in order to avoid circular dependency with the "dnsblquery" package.
	QueriesInverseTable = "dnsbl_queries"
	// QueriesColumn is the table column denoting the queries relation/edge.
	QueriesColumn = "ip_queries"
)

// Columns holds all SQL columns for ip fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldIPAddress,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the created_at field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the updated_at field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the id field.
	DefaultID func() uuid.UUID
)
