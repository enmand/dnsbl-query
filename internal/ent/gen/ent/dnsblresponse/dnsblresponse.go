// Code generated by entc, DO NOT EDIT.

package dnsblresponse

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the dnsblresponse type in the database.
	Label = "dnsbl_response"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"

	// EdgeQuery holds the string denoting the query edge name in mutations.
	EdgeQuery = "query"

	// Table holds the table name of the dnsblresponse in the database.
	Table = "dnsbl_responses"
	// QueryTable is the table the holds the query relation/edge.
	QueryTable = "dnsbl_responses"
	// QueryInverseTable is the table name for the DNSBLQuery entity.
	// It exists in this package in order to avoid circular dependency with the "dnsblquery" package.
	QueryInverseTable = "dnsbl_queries"
	// QueryColumn is the table column denoting the query relation/edge.
	QueryColumn = "dnsbl_query_responses"
)

// Columns holds all SQL columns for dnsblresponse fields.
var Columns = []string{
	FieldID,
	FieldCode,
	FieldDescription,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the DNSBLResponse type.
var ForeignKeys = []string{
	"dnsbl_query_responses",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the id field.
	DefaultID func() uuid.UUID
)
